{"version":3,"sources":["redux/actions/auth.js","redux/actions/actionTypes.js","layouts/Header/Header.js","layouts/Footer/Footer.js","layouts/Page/Page.js","components/FormAuth/FormAuth.js","pages/Login/Login.js","components/RoomListItem/Room1ListItem.js","redux/actions/halls.js","components/Spinner/Spinner.js","pages/Dashboard/Dashboard.js","pages/SignUp/SignUp.js","redux/actions/tickets.js","components/FormBooking/FormBooking.js","components/FormCorrect/FormCorrect.js","components/DaySceduleCell/DaySceduleCell.js","components/DayScedule/DayScedule.js","components/Preview/Preview.js","components/MyCalendar/MyCalendar.js","components/RoomScedule/RoomScedule.js","pages/Hall/Hall.js","App.js","serviceWorker.js","redux/reducers/auth.js","redux/reducers/halls.js","redux/reducers/tickets.js","index.js"],"names":["url","signUpSuccess","userId","email","type","signInSuccess","token","authFail","err","Header","state","open","handleClose","_this","setState","handleOpen","localStorage","getItem","classes","this","props","controlls","react_default","a","createElement","react_router_dom","to","index_es","variant","color","className","margin","onClick","AccountCircle_default","anchorOrigin","vertical","horizontal","onClose","message","onLogOut","exact","React","Component","connect","auth","dispatch","clear","sessionStorage","withStyles","theme","spacing","unit","footer","backgroundColor","padding","align","Page","layouts_Header_Header","children","layouts_Footer_Footer","FormAuth","password","isVaild","handleChange","name","event","checkValid","Object","defineProperty","target","value","regExp","console","log","test","handleSubmit","preventDefault","userRequest","_this$props","formType","_this$state","layouts_Page_Page","login","onSubmit","form","error","placeholder","onChange","button","disabled","text","display","alignItems","justifyContent","height","flexDirection","Login","handleRequest","user","setItem","isAuthenticated","react_router","aria-labelledby","id","components_FormAuth_FormAuth","axios","post","concat","then","res","_res$data2","data","_id","catch","signIn","Room1ListItem","clickHandler","roomNumber","hall","_this$props$hall","title","description","imageURL","Card_default","CardActionArea_default","CardMedia_default","image","CardContent_default","Typography_default","gutterBottom","component","config","headers","Authorization","loadInit","loadSuccess","halls","loadFail","Spinner","Dashboard","onLoad","isLoading","components_Spinner_Spinner","map","idx","components_RoomListItem_Room1ListItem","key","get","SignUp","isSignedUp","_ref","_res$data","response","signUp","getTickets","getTicketsInit","tickets","getTicketsSuccess","getTicketsFail","FormBooking","date","start","hours","end","e","_e$target","moment","add","format","onAdd","postTicket","hall_id","user_id","from","Date","getTime","_this$state2","required","label","textField","InputLabelProps","shrink","inputProps","min","max","step","marginBottom","length","aria-label","Done_default","root","flexGrow","width","container","FormCorrect","expanded","onCorrect","correctTicket","hallId","isMineBooking","onDelete","_this$props2","deleteTicket","handleExpandClick","_this$props3","isBookedTime","card","avatar","expand","aria-expanded","Cached_default","Delete_default","in","timeout","unmountOnExit","ticketId","put","putTicket","delete","deleteTickets","DaySceduleCell","currentDate","hallTickets","filter","ticket","usertickets","find","isBetween","components_FormCorrect_FormCorrect","components_FormBooking_FormBooking","DayScedule","Array","fill","el","components_DaySceduleCell_DaySceduleCell","assign","Preview","currentDay","currentHallId","isBooked","some","Calendar","currentMonth","selectedDate","onDateClick","day","onChangeDay","nextMonth","prevMonth","subtract","ChevronLeft_default","ChevronRight_default","days","startDay","startOf","i","push","_this2","monthStart","clone","monthEnd","endOf","startDate","endDate","rows","formattedDate","_loop","cloneDay","isSame","components_Preview_Preview","renderHeader","renderDays","renderCells","RoomScedule","onChangeTime","noValidate","MyCalendar_MyCalendar","components_DayScedule_DayScedule","flexWrap","Hall","confirmErr","hallsErr","ticketsErr","hallsLoading","ticketsLoading","elevation","alt","src","bigAvatar","components_RoomScedule_RoomScedule","ownProps","match","params","objectSpread","mixins","gutters","paddingTop","paddingBottom","maxWidth","borderRadius","marginTop","App","routes","path","Boolean","window","location","hostname","initialState","loading","reducer","arguments","undefined","action","rootReducer","combineReducers","authReducer","roomReducer","ticketsReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","es","basename","process","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02c8caf5.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes'\nimport axios from \"axios\";\n\nconst url = 'https://web-ninjas.net';\n\nexport const signUp = (email, password) => {\n  return dispatch => {\n    const user = {\n      email,\n      password,\n    };\n\n    axios\n      .post(`${url}/signUp`, user)\n      .then(res => {\n        const { id, email } = res.data;\n\n        localStorage.setItem(\"email\", email);\n        dispatch(signUpSuccess(id, email));\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(authFail(err.message));\n      });\n  };\n};\n\nexport const signIn = (user) => {\n  return dispatch => {\n    axios\n      .post(`${url}/signIn`, user)\n      .then(res => {\n        const { token, _id } = res.data;\n\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"userId\", _id);\n        dispatch(signInSuccess(token));\n      })\n      .catch(err => {\n        dispatch(authFail(err.message));\n      });\n  };\n};\n\n\n\nexport const signUpSuccess = (userId, email) => {\n  return {\n    type: actionTypes.SIGNUP_SUCCESS,\n    email,\n    userId\n  };\n};\n\nexport const signInSuccess = (token) => {\n  return {\n    type: actionTypes.SIGNIN_SUCCESS,\n    token\n  };\n};\n\nexport const authFail = (err) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    err\n  };\n};\n\nexport const logout = () => {\n  localStorage.clear();\n  sessionStorage.clear();\n  return {\n    type: actionTypes.LOGOUT\n  };\n};","\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const LOAD_HALLS_INIT = \"LOAD_HALLS_INIT\";\nexport const LOAD_HALLS_SUCCES = \"LOAD_HALLSLOAD_HALLS_SUCCES\";\nexport const LOAD_HALLS_FAIL = \"LOAD_HALLSLOAD_HALLS_FAIL\";\n\n\nexport const GET_TICKETS_INIT = \"GET_TICKETS_INIT\";\nexport const GET_TICKETS_SUCCESS = \"GET_TICKETS_SUCCESS\";\nexport const GET_TICKETS_FAIL = \"GET_TICKETS_FAIL\";\n\nexport const ERR_CONFIRM = \"ERR_CONFIRM\"\n","import React from 'react';\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nimport { Typography, Button, Snackbar, withStyles } from \"@material-ui/core\";\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport './Header.scss'\nimport { logout } from '../../redux/actions/auth';\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit,\n  }\n});\n\nclass Header extends React.Component {\n  state = {\n    open: false\n  }\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  // handleLogOut = () => {\n  //   localStorage.removeItem(\"token\");\n  //   this.setState()\n  // }\n\n  render() {\n    const token = localStorage.getItem(\"token\");\n    const email = localStorage.getItem(\"email\");\n    const { classes } = this.props;\n\n    let controlls = (\n      <div>\n        <Link to={'/sign-in'}><Button variant='contained' color='secondary' className={classes.margin}>Sign In</Button></Link>\n        <Link to={'/sign-up'}><Button variant='contained' color='secondary' className={classes.margin}>Sign Up</Button></Link>\n      </div>\n    )\n\n    if (token) {\n      controlls = (\n        <div>\n          <div className=\"controll\">\n            <Button onClick={this.handleOpen}>\n              {token && <Typography color='secondary'>{email}</Typography>}\n              <AccountCircle color='secondary' />\n            </Button>\n          </div>\n\n          <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            open={this.state.open}\n            onClose={this.handleClose}\n            message={\n              <Button\n                onClick={this.props.onLogOut}\n                variant='contained'\n                color='secondary'\n              >\n                LogOut\n            </Button>\n            } />\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"header\">\n        <NavLink exact to='/'><Typography variant=\"h1\">BOOKING-TEST</Typography></NavLink>\n\n        {controlls}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n\n  return {\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogOut: () => dispatch(logout()),\n  };\n};\n\nHeader.propTypes = {\n  token: PropTypes.string,\n  onLogOut: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Header));\n\n","import React from 'react';\n\nimport { Typography, withStyles } from '@material-ui/core';\n\n\nconst styles = theme => ({\n  footer: {\n    backgroundColor: \"#111\",\n    padding: 20\n  }\n});\n\nconst Footer = (props) => {\n  const { classes } = props;\n  return (\n    <div className={classes.footer}>\n      <Typography align='right' color='secondary'> Made by Yaroslav Antonchyk </Typography>\n    </div>\n  )\n};\n\nexport default withStyles(styles)(Footer);","import React from 'react';\n\nimport './Page.scss';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\n\nconst Page = (props) => {\n  return (\n    <div className=\"page\">\n      <Header />\n      <div className=\"page-content\">\n        {props.children}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\n\n\nexport default Page;","import React from 'react';\n\nimport { Paper, TextField, withStyles, Button } from '@material-ui/core';\n\nimport Page from '../../layouts/Page/Page';\nimport './FormAuth.scss'\n\nconst styles = () => ({\n  login: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  margin: {\n    margin: 20\n  },\n  form: {\n    height: 260,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n})\n\nclass FormAuth extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    isVaild: true\n  }\n\n  handleChange = name => event => {\n    this.checkValid()\n    this.setState({ [name]: event.target.value });\n  };\n\n  checkValid = () => {\n    const { email } = this.state;\n    const regExp = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    console.log(regExp.test(email));\n    this.setState({\n      isVaild: regExp.test(email)\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.userRequest(this.state);\n\n    this.setState({\n      email: '',\n      password: '',\n    });\n  }\n\n  render() {\n    const { classes, formType } = this.props;\n    const { email, password, isVaild } = this.state;\n    // const userId = localStorage.getItem(\"userId\");\n\n    return (\n      <Page>\n        <div className={classes.login}>\n          <Paper >\n            <form onSubmit={this.handleSubmit} className={classes.form}>\n              <TextField\n                error={!isVaild}\n                className={classes.margin}\n                name='email'\n                placeholder='Email'\n                value={email}\n                onChange={this.handleChange('email')} />\n              <br />\n\n              <TextField\n                className={classes.margin}\n                name='password'\n                type='password'\n                placeholder='Password'\n                value={password}\n                onChange={this.handleChange('password')} />\n              <br />\n\n              <Button\n                variant='contained'\n                color='secondary'\n                type='submit'\n                className={classes.button}\n                disabled={!(email && password && isVaild)}\n              >\n                {formType}\n              </Button>\n            </form>\n\n            <div className={classes.margin + ' ' + classes.text}>\n              {this.props.children}\n            </div>\n\n          </Paper>\n        </div>\n      </Page>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(FormAuth);","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nimport FormAuth from '../../components/FormAuth/FormAuth';\nimport { signIn, authFail } from '../../redux/actions/auth';\nimport Page from '../../layouts/Page/Page';\nimport { Dialog, DialogTitle, Typography, Button } from '@material-ui/core';\n\n\nclass Login extends React.Component {\n\n  state = {\n    open: false,\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n    this.props.onClose();\n  };\n\n  handleRequest = (user) => {\n    const { email } = user;\n    localStorage.setItem(\"email\", email);\n\n    this.props.onSubmit(user);\n    console.log(user);\n\n  }\n\n  render() {\n    const { isAuthenticated, err } = this.props;\n\n    if (isAuthenticated) {\n      return (\n        <Redirect exact to='/' />\n      )\n    }\n\n    if (err) {\n      return (\n        <Page>\n          <Dialog\n            open={true}\n            onClose={this.handleClose}\n            aria-labelledby=\"simple-dialog-title\" >\n            <DialogTitle id=\"simple-dialog-title\">{err}</DialogTitle>\n          </Dialog>\n        </Page>\n      )\n    }\n\n    return (\n      <FormAuth userRequest={this.handleRequest} formType=\"Login\">\n        <Typography align='center'> Have no account?</Typography>\n        <Link to={'/sign-up'}>\n          <Button variant='text' color='secondary'>Sign Up </Button>\n        </Link>\n      </FormAuth>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: !!localStorage.getItem(\"token\"),\n    err: state.auth.err\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: (user) => dispatch(signIn(user)),\n    onClose: () => dispatch(authFail(null))\n  };\n};\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  err: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nimport './Room1ListItem.scss'\n\n\nclass Room1ListItem extends React.Component {\n\n  clickHandler = () => {\n    const { roomNumber, hall: { _id } } = this.props;\n    localStorage.setItem(\"currentRoom\", roomNumber);\n    localStorage.setItem(\"currentHallId\", _id);\n  }\n\n  render() {\n    const { hall: { title, description, imageURL, _id } } = this.props;\n\n    return (\n      <div className=\"room-listitem\">\n        <Card className='card'>\n          <Link to={`/hall/${_id}`}>\n            <CardActionArea\n              onClick={this.clickHandler}\n            >\n              <CardMedia\n                className='media'\n                image={imageURL}\n                title={title}\n              />\n\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {title}\n                </Typography>\n\n                <Typography component=\"p\">\n                  {description}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Link>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Room1ListItem;","import * as actionTypes from './actionTypes'\nimport axios from \"axios\";\n\nconst url = 'https://web-ninjas.net/halls';\n\nconst config = {\n  headers: {\n    'Authorization': localStorage.getItem(\"token\")\n  }\n}\n\nexport const loadHalls = () => {\n  return dispatch => {\n    dispatch(loadInit());\n\n    axios\n      .get(url, config)\n      .then(res => {\n        const { halls } = res.data;\n\n        dispatch(loadSuccess(halls));\n      })\n      .catch(err => {\n        dispatch(loadFail(err.message))\n      });\n  };\n};\n\nexport const loadInit = () => {\n  return {\n    type: actionTypes.LOAD_HALLS_INIT\n  }\n}\n\nexport const loadSuccess = (halls) => {\n  return {\n    type: actionTypes.LOAD_HALLS_SUCCES,\n    halls\n  };\n};\n\nexport const loadFail = (err) => {\n  return {\n    type: actionTypes.LOAD_HALLS_FAIL,\n    err\n  };\n};","import React from \"react\";\n\nimport \"./Spinner.scss\";\n\nconst Spinner = () => <div className=\"Loader\">Loading...</div>;\n\nexport default Spinner;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogTitle } from '@material-ui/core';\n\n\nimport Page from '../../layouts/Page/Page';\nimport Room1ListItem from '../../components/RoomListItem/Room1ListItem';\n// import { halls } from '../../data/rooms';\n\nimport './Dashboard.scss'\nimport { loadHalls } from '../../redux/actions/halls';\nimport Spinner from '../../components/Spinner/Spinner';\n\nclass Dashboard extends React.Component {\n  state = {\n    open: true,\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  componentDidMount() {\n    this.props.onLoad();\n  }\n\n  render() {\n    let { halls, err, isLoading } = this.props;\n\n    if (isLoading) {\n      return (\n        <Page >\n          <Spinner />\n        </Page>\n      )\n    }\n\n    if (err) {\n      return (\n        <Page>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby=\"simple-dialog-title\" >\n            <DialogTitle id=\"simple-dialog-title\">{err}</DialogTitle>\n          </Dialog>\n        </Page>\n      )\n    }\n\n    return (\n      <Page >\n        <div className=\"dashboard\">\n          {\n            halls.map((hall, idx) => {\n              return (\n                <Room1ListItem hall={hall} key={hall._id} roomNumber={idx} />\n              )\n            })\n          }\n        </div>\n      </Page>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    halls: state.halls.halls,\n    err: state.halls.err,\n    isLoading: state.halls.isLoading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoad: () => dispatch(loadHalls()),\n  };\n};\n\nDashboard.propTypes = {\n  halls: PropTypes.array.isRequired,\n  err: PropTypes.string,\n  isLoading: PropTypes.bool.isRequired,\n  onLoad: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Typography, Button, Dialog, DialogTitle } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\n\nimport FormAuth from '../../components/FormAuth/FormAuth';\nimport { signUp, authFail } from '../../redux/actions/auth';\nimport Page from '../../layouts/Page/Page';\nimport '../../styles/index.scss'\n\nclass SignUp extends React.Component {\n\n  state = {\n    open: false,\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n    this.props.onClose();\n  };\n\n  handleRequest = (user) => {\n    this.props.onSubmit(user);\n    console.log(user);\n  }\n\n  render() {\n    const { isSignedUp, err } = this.props;\n\n    if (isSignedUp) {\n      return (\n        <Page>\n          <div className='flexbox col align-center justify-center'>\n\n            <Typography align='center' variant='h3'>Account created please </Typography>\n            <br />\n            <Link to={'/sign-in'}>\n              <Button variant='text' color='secondary'>\n                <Typography align='center' variant='h3'>Login</Typography>\n              </Button>\n            </Link>\n\n          </div>\n        </Page>\n      )\n    }\n\n    if (err) {\n      console.log(err);\n\n      return (\n        <Page>\n          <Dialog\n            open={true}\n            onClose={this.handleClose}\n            aria-labelledby=\"simple-dialog-title\" >\n            <DialogTitle id=\"simple-dialog-title\">{err}</DialogTitle>\n          </Dialog>\n        </Page>\n      )\n    }\n\n    return (\n      <FormAuth userRequest={this.handleRequest} formType=\"Sign Up\">\n        <Typography align='center'> Have an account? </Typography>\n        <Link to={'/sign-in'}>\n          <Button variant='text' color='secondary'>Login</Button>\n        </Link>\n      </FormAuth>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedUp: state.auth.userId !== null,\n    err: state.auth.err\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: ({ email, password }) => dispatch(signUp(email, password)),\n    onClose: () => dispatch(authFail(null))\n  };\n};\n\nSignUp.propTypes = {\n  isSignedUp: PropTypes.bool,\n  err: PropTypes.string,\n\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);","import * as actionTypes from './actionTypes'\nimport axios from \"axios\";\n\nconst url = 'https://web-ninjas.net/tickets';\nconst putUrl = 'https://web-ninjas.net/ticket';\nconst config = {\n  headers: {\n    'Authorization': localStorage.getItem(\"token\")\n  }\n}\n\nexport const postTicket = (hall) => {\n  return dispatch => {\n    dispatch(getTicketsInit());\n    const { from, to } = hall;\n\n    if (new Date().getTime() > from) {\n      dispatch(getTicketsFail(\"This time is already past\"))\n    } else if (from > to) {\n      dispatch(getTicketsFail(\"End must be later then start\"))\n    } else {\n      axios\n        .post(url, hall, config)\n        .then(() => {\n          dispatch(getTickets());\n        })\n        .catch(err => {\n          dispatch(getTicketsFail(err.message));\n        });\n    }\n  };\n};\n\nexport const putTicket = (hall, ticketId) => {\n  return dispatch => {\n    dispatch(getTicketsInit());\n    const { from, to } = hall;\n\n    if (new Date().getTime() > from) {\n      dispatch(getTicketsFail(\"This time is already past\"))\n    } else if (from > to) {\n      dispatch(getTicketsFail(\"End must be later then start\"))\n    } else {\n      axios\n        .put(`${putUrl}/${ticketId}`, { from, to, title: \"event\" }, config)\n        .then(() => {\n          dispatch(getTickets());\n        })\n        .catch(err => {\n          dispatch(getTicketsFail(err.message));\n        });\n    }\n  };\n};\n\nexport const getTickets = () => {\n  // const date = sessionStorage.getItem(\"date\") || moment().format('YYYY-MM-DD');\n  // const currentMomth = sessionStorage.getItem(\"currentMonth\")\n  // console.log(moment(currentMomth).format('YYYY-MM'))\n\n  // const from = new Date(moment(currentMomth).clone().format('YYYY-MM')).getTime();\n  // const to = new Date(moment(currentMomth).clone().add(1, 'month').format('YYYY-MM')).getTime();\n\n  // console.log(from);\n  // console.log(to);\n\n  return dispatch => {\n    dispatch(getTicketsInit());\n    axios\n      .get(`${url}`)\n      // .get(`${url}params/${from}/${to}`)\n      .then(res => {\n        const tickets = res.data;\n        dispatch(getTicketsSuccess(tickets));\n      })\n      .catch(err => {\n        dispatch(getTicketsFail(err.message));\n      });\n  };\n};\n\nexport const deleteTickets = (ticketId) => {\n  return dispatch => {\n    axios\n      .delete(`${url}/${ticketId}`, config)\n      .then(res => {\n        dispatch(getTickets());\n      })\n      .catch(err => {\n        dispatch(getTicketsFail(err.message));\n      });\n  };\n};\n\n\n\nexport const getTicketsInit = () => {\n  return {\n    type: actionTypes.GET_TICKETS_INIT,\n  };\n};\n\nexport const getTicketsSuccess = (tickets) => {\n  return {\n    type: actionTypes.GET_TICKETS_SUCCESS,\n    tickets\n  };\n};\n\nexport const getTicketsFail = (err) => {\n  return {\n    type: actionTypes.GET_TICKETS_FAIL,\n    err\n  };\n};\n\nexport const confirmErr = () => {\n  return {\n    type: actionTypes.ERR_CONFIRM,\n  };\n};\n\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { TextField, withStyles, Button } from '@material-ui/core';\nimport { postTicket } from '../../redux/actions/tickets';\nimport Done from '@material-ui/icons/Done';\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%'\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  marginBottom: {\n    marginBottom: 20\n  },\n  container: {\n    color: 'red'\n  },\n  textField: {\n    color: 'red'\n  }\n});\n\nclass FormBooking extends Component {\n  state = {\n    date: `${this.props.date}`,\n    start: `${this.props.hours}:00`,\n    end: `${this.props.hours + 1}:00`,\n    title: '',\n    open: false,\n  }\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    const { date } = this.state;\n\n    if (name === \"start\") {\n      this.setState({\n        end: moment(`${date}T${value}:00`).add(1, 'hours').format('HH:00')\n      })\n    }\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onAdd = () => {\n    const { date, start, end, title } = this.state;\n\n    this.props.postTicket({\n      hall_id: localStorage.getItem(\"currentHallId\"),\n      user_id: localStorage.getItem(\"userId\"),\n      from: new Date(date + 'T' + start).getTime() + 1,\n      to: new Date(date + 'T' + end).getTime() - 1,\n      title\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { date, title, start, end } = this.state;\n    const isAuthenticated = !!localStorage.getItem(\"token\");\n\n    return (\n      <div className=\"flexbox col pd-20\">\n        <TextField\n          id=\"title\"\n          placeholder='Your event'\n          required={true}\n          label=\"Title\"\n          type=\"text\"\n          name='title'\n          value={title}\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={this.onChange}\n        />\n\n        <TextField\n          id=\"date\"\n          label=\"Book room for date\"\n          type=\"date\"\n          name='date'\n          value={date}\n          className={classes.textField}\n          inputProps={{ min: moment().format('YYYY-MM-DD') }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={this.onChange}\n        />\n\n        <TextField\n          id=\"time\"\n          label=\"Start event\"\n          type=\"time\"\n          name=\"start\"\n          value={start}\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{ min: \"10:00\", max: \"18:00\", step: \"1\" }}\n          onChange={this.onChange}\n        />\n\n        <TextField\n          id=\"time\"\n          label=\"End event\"\n          type=\"time\"\n          name='end'\n          value={end}\n          className={`${classes.textField} ${classes.marginBottom}`}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{ min: start, max: \"18:00\", step: \"1\" }}\n          onChange={this.onChange}\n        />\n\n\n        {isAuthenticated ? (\n          <Button\n            color='secondary'\n            disabled={title.length === 0}\n            onClick={this.onAdd}\n            aria-label=\"Done\"\n          >\n            <Done />\n          </Button>\n        ) : (\n            <Link to={'/sign-in'}>\n              <Button variant='text' color='secondary'>Sign in to book</Button>\n            </Link>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tickets: state.tickets.tickets\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postTicket: (user) => dispatch(postTicket(user))\n  };\n};\n\nFormBooking.propTypes = {\n  classes: PropTypes.object.isRequired,\n  date: PropTypes.string,\n  start: PropTypes.string,\n  tickets: PropTypes.array.isRequired,\n  postTicket: PropTypes.func.isRequired,\n}\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(FormBooking));","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { TextField, withStyles, Card, CardHeader, Avatar, CardContent, Typography, IconButton, Collapse, Button } from '@material-ui/core';\nimport Cached from '@material-ui/icons/Cached';\nimport Delete from '@material-ui/icons/Delete';\nimport Done from '@material-ui/icons/Done';\nimport { putTicket, deleteTickets } from '../../redux/actions/tickets';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%'\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  marginBottom: {\n    marginBottom: 20\n  },\n  container: {\n    color: 'red'\n  },\n  textField: {\n    color: 'red'\n  },\n  avatar: {\n    backgroundColor: '#C51161',\n  },\n});\n\nclass FormCorrect extends Component {\n  state = {\n    date: this.props.date,\n    start: `${this.props.hours}:00`,\n    end: `${this.props.hours + 1}:00`,\n    title: '',\n    expanded: false\n  }\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    const { date } = this.state;\n\n    if (name === \"start\") {\n      this.setState({\n        end: moment(`${date}T${value}:00`).add(1, 'hours').format('HH:00')\n      })\n    }\n\n    this.setState({\n      [name]: value\n    });\n\n    sessionStorage.setItem([name], value);\n  }\n\n  onCorrect = e => {\n    const { correctTicket, hallId, isMineBooking } = this.props;\n    const { date, start, end } = this.state;\n\n    correctTicket({\n      hall_id: hallId,\n      user_id: localStorage.getItem(\"userId\"),\n      from: new Date(`${date}T${start}`).getTime() + 1,\n      to: new Date(`${date}T${end}`).getTime() - 1,\n    }, isMineBooking._id);\n  }\n\n  onDelete = e => {\n    const { deleteTicket, isMineBooking } = this.props;\n    deleteTicket(isMineBooking._id);\n  }\n\n  handleExpandClick = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { classes, isMineBooking, isBookedTime } = this.props;\n    const { title, start, end, date } = this.state;\n    const isAuthenticated = !!localStorage.getItem(\"token\");\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"Info\" className={classes.avatar}>\n              I\n            </Avatar>\n          }\n          title=\"About ticket\"\n        />\n\n        <CardContent>\n          <Typography component=\"p\" variant='subtitle1'>\n            Title: {isBookedTime.title}\n          </Typography>\n\n          <Typography component=\"p\" variant='subtitle1'>\n            From: {moment(isBookedTime.from).format('DD-MM-YYYY HH:mm')}\n          </Typography>\n\n          <Typography component=\"p\" variant='subtitle1'>\n            To: {moment(isBookedTime.to).format('DD-MM-YYYY HH:mm')}\n          </Typography>\n\n          <IconButton\n            className={classes.expand}\n            onClick={this.handleExpandClick}\n            aria-expanded={this.state.expanded}\n            disabled={!(isAuthenticated && isMineBooking)}\n            color='secondary'\n            aria-label=\"Correct ticket\"\n          >\n            <Cached />\n          </IconButton>\n\n          <IconButton\n            color='secondary'\n            onClick={this.onDelete}\n            disabled={!(isAuthenticated && isMineBooking)}\n            aria-label=\"Correct ticket\">\n            <Delete />\n          </IconButton>\n        </CardContent>\n\n        <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <div className=\"flexbox col\">\n              <TextField\n                required={true}\n                placeholder='Your event'\n                id=\"title\"\n                label=\"Title\"\n                type=\"text\"\n                name='title'\n                value={title}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={this.onChange}\n              />\n\n              <TextField\n                id=\"date\"\n                label=\"Book room for new date\"\n                type=\"date\"\n                name='date'\n                value={date}\n                className={classes.textField}\n                inputProps={{ min: moment().format('YYYY-MM-DD') }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={this.onChange}\n              />\n\n              <TextField\n                id=\"time\"\n                label=\"Start event\"\n                type=\"time\"\n                name=\"start\"\n                value={start}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{ min: \"10:00\", max: \"18:00\", step: \"1\" }}\n                onChange={this.onChange}\n              />\n\n              <TextField\n                id=\"time\"\n                label=\"End event\"\n                type=\"time\"\n                name='end'\n                value={end}\n                className={`${classes.textField} ${classes.marginBottom}`}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{ min: start, max: \"18:00\", step: \"1\" }}\n                onChange={this.onChange}\n              />\n\n              <Button\n                color='secondary'\n                disabled={title.length === 0}\n                aria-label=\"Correct ticket\"\n                onClick={this.onCorrect}\n              >\n                <Done />\n              </Button>\n            </div>\n\n          </CardContent>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tickets: state.tickets.tickets\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    correctTicket: (user, ticketId) => dispatch(putTicket(user, ticketId)),\n    deleteTicket: (ticketId) => dispatch(deleteTickets(ticketId)),\n  };\n};\n\nFormCorrect.propTypes = {\n  classes: PropTypes.object.isRequired,\n  date: PropTypes.string,\n  start: PropTypes.string,\n  tickets: PropTypes.array.isRequired,\n  correctTicket: PropTypes.func.isRequired,\n  deleteTicket: PropTypes.func.isRequired,\n}\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(FormCorrect));","import React from 'react';\nimport moment from 'moment';\nimport { Typography, Dialog } from '@material-ui/core';\n\nimport './DaySceduleCell.scss';\nimport FormBooking from '../FormBooking/FormBooking';\nimport FormCorrect from '../FormCorrect/FormCorrect';\n\n\nclass DaySceduleCell extends React.Component {\n  state = {\n    open: false,\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    // const currentRoom = sessionStorage.getItem(\"currentRoom\")\n    // const { items } = JSON.parse(localStorage.getItem(\"data\" + currentRoom)) || { items: [] };\n    const { hours, currentDate, tickets, hallId } = this.props;\n    const { date } = currentDate;\n    const userId = localStorage.getItem(\"userId\");\n    const hallTickets = tickets.filter(ticket => ticket.hall_id === hallId);\n    const usertickets = hallTickets.filter(ticket => ticket.user_id === userId);\n    const isBookedTime = hallTickets.find(ticket => moment(date + 'T' + hours + ':01').isBetween(ticket.from, ticket.to, 'millisecond'));\n    const isMineBooking = usertickets.find(ticket => moment(date + 'T' + hours + ':01').isBetween(ticket.from, ticket.to, 'millisecond'));\n\n    return (\n      <div className=\"cell\">\n        <div className=\"hours\">{hours}:00- {hours + 1}:00</div>\n\n        <div className={`mark ${isBookedTime ? 'booked' : 'free'} `} onClick={this.handleOpen}>\n          {isMineBooking && (\n            <Typography>*</Typography>\n          )}\n        </div>\n\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          {isBookedTime ? (\n            <FormCorrect date={date} hours={hours} isMineBooking={isMineBooking} isBookedTime={isBookedTime} />\n          ) : (\n              <FormBooking date={date} hours={hours} />\n            )}\n        </Dialog>\n      </div>\n    );\n  }\n}\n\n\nexport default DaySceduleCell;\n","import React from 'react';\nimport './DayScedule.scss'\nimport DaySceduleCell from '../DaySceduleCell/DaySceduleCell';\nimport { Typography } from '@material-ui/core';\n\nconst DayScedule = (props) => (\n    <div className=\"day-scedule-wrapper\">\n        <div className=\"day-scedule mb-20\">\n            {new Array(8).fill(null).map((el, idx) => (\n                <DaySceduleCell hours={10 + idx} {...props} key={idx} />\n            ))}\n        </div>\n\n        <div className=\"flexbox align-center mb-20\">\n            <span className='marker marker-free mr-20'></span><Typography variant='subtitle1'> - is free</Typography>\n        </div>\n\n        <div className=\"flexbox align-center mb-20 \">\n            <span className='marker marker-book mr-20'></span><Typography variant='subtitle1'> - is booked</Typography>\n        </div>\n\n        <div className=\"flexbox align-center mb-20 \">\n            <span className='mr-20'>*</span><Typography variant='subtitle1'> - your booking</Typography>\n        </div>\n    </div>\n);\n\nexport default DayScedule;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\n\nimport './Preview.scss'\n\nclass Preview extends Component {\n  state = {}\n  render() {\n    const { tickets, currentDay } = this.props;\n    const currentHallId = localStorage.getItem(\"currentHallId\");\n\n    const hallTickets = tickets.filter(ticket => {\n      return ticket.hall_id === currentHallId\n    })\n\n    return (\n      <div className=\"preview\">\n        {new Array(8).fill(null).map((el, idx) => {\n\n          const isBooked = hallTickets.some(ticket => {\n            return moment(`${moment(currentDay).format('YYYY-MM-DD')}T1${idx}:01`).isBetween(ticket.from, ticket.to, 'milliseconds');\n          })\n\n          return <span key={idx} className={`mark ${isBooked && 'booked'}`}></span>\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tickets: state.tickets.tickets\n  };\n};\n\nexport default connect(mapStateToProps)(Preview);","import React from \"react\";\nimport moment from \"moment\";\n\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Button, Typography } from \"@material-ui/core\";\n\nimport './MyCalendar.scss'\nimport Preview from \"../Preview/Preview\";\n\nclass Calendar extends React.Component {\n  state = {\n    currentMonth: moment(),\n    selectedDate: moment()\n  };\n\n  onDateClick = day => {\n    const { onChangeDay } = this.props;\n    this.setState({\n      selectedDate: day\n    });\n    onChangeDay(moment(day).format('YYYY-MM-DD'));\n  };\n\n  nextMonth = () => {\n    const { currentMonth } = this.state;\n    this.setState({\n      currentMonth: currentMonth.add(1, 'month')\n    });\n  };\n\n  prevMonth = () => {\n    const { currentMonth } = this.state;\n    this.setState({\n      currentMonth: currentMonth.subtract(1, 'month')\n    });\n  };\n\n  renderHeader() {\n    const dateFormat = \"MMMM YYYY\";\n    const { currentMonth } = this.state;\n\n    return (\n      <div className=\"calendar-header flexbox align-center\">\n        <Button onClick={this.prevMonth}>\n          <ChevronLeft />\n        </Button>\n\n        <span>{moment(currentMonth).format(dateFormat)}</span>\n\n        <Button onClick={this.nextMonth}>\n          <ChevronRight />\n        </Button>\n      </div>\n    );\n  }\n\n  renderDays() {\n    const dateFormat = \"ddd\";\n    const days = [];\n    const startDay = moment().startOf('week');\n\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"cell\" key={i}>\n          {startDay.add(1, 'day').format(dateFormat)}\n        </div>\n      );\n    }\n\n    return <div className=\"days flexbox\">{days}</div>;\n  }\n\n  renderCells() {\n    const {\n      currentMonth,\n      selectedDate\n    } = this.state;\n    const monthStart = currentMonth.clone().startOf('month');\n    const monthEnd = currentMonth.clone().endOf('month');\n    const startDate = monthStart.clone().startOf('isoWeek');\n    const endDate = monthEnd.clone().endOf('isoWeek');\n    const dateFormat = \"DD\";\n    const rows = [];\n\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = moment(day).format(dateFormat);\n        const currentDay = moment(day)\n        let cloneDay = day;\n\n        days.push(\n          <div\n            className={`day ${\n              !moment(cloneDay).isSame(currentMonth, 'month')\n                ? \"disabled\"\n                : moment(cloneDay).isSame(selectedDate, 'day') ? \"selected\" : \"\"\n              }`\n            }\n            key={day}\n            onClick={() => this.onDateClick(currentDay)}\n          >\n            <Typography>{formattedDate}</Typography>\n\n            <Preview currentDay={currentDay} />\n          </div>\n        );\n        day = day.add(1, 'day');\n      }\n\n      rows.push(\n        <div className=\"week\" key={day}>\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return <div className=\"body\">{rows}</div>;\n  }\n\n  render() {\n    return (\n      <div className=\"calendar\">\n        {this.renderHeader()}\n        {this.renderDays()}\n        {this.renderCells()}\n      </div>\n    );\n  }\n}\n\nexport default Calendar;","import React from 'react';\nimport moment from 'moment';\nimport { withStyles, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport './RoomScedule.scss';\nimport DayScedule from '../DayScedule/DayScedule';\n\nimport Calendar from '../MyCalendar/MyCalendar';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    width: 400,\n    marginBottom: 20\n  }\n});\n\nclass RoomScedule extends React.Component {\n  state = {\n    date: moment().format('YYYY-MM-DD'),\n    start: '10:00',\n    end: '11:00',\n    open: false,\n  }\n\n  onChangeTime = (e) => {\n    const { name, value } = e.target;\n    const { date } = this.state;\n\n    if (name === \"start\") {\n      this.setState({\n        end: moment(`${date}T${value}:00`).add(1, 'hours').format('HH:00')\n      })\n    }\n\n    this.setState({\n      [name]: value\n    });\n    sessionStorage.setItem([name], value);\n  }\n\n  onChangeDay = (date) => {\n    this.setState({\n      date\n    });\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div>\n        <form className=\"roomscedule\" noValidate onSubmit={this.onAdd}>\n          <div className=\"picker-container\">\n            <Calendar onChangeDay={(date) => this.onChangeDay(date)} />\n          </div>\n\n          <Typography variant='h4' align='center'>Scedule for {date}</Typography>\n\n          <Typography variant='subtitle1' align='center'>Click cell for more info</Typography>\n\n          <DayScedule currentDate={this.state} {...this.props} />\n\n        </form>\n      </div>\n    )\n  }\n}\n\nRoomScedule.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default (withStyles(styles)(RoomScedule));\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Paper, Typography, withStyles, Avatar, Dialog, DialogTitle } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { Redirect } from \"react-router-dom\";\n\nimport Page from '../../layouts/Page/Page';\nimport Spinner from '../../components/Spinner/Spinner';\nimport RoomScedule from '../../components/RoomScedule/RoomScedule';\nimport { getTickets, confirmErr } from '../../redux/actions/tickets';\n\n\nconst styles = theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 4,\n    margin: 20\n  },\n\n  bigAvatar: {\n    width: '100%',\n    maxWidth: 360,\n    height: 260,\n    borderRadius: 10,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n  },\n});\n\nclass Hall extends React.Component {\n\n  state = {\n    open: true,\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n    this.props.confirmErr();\n    this.handleOpen();\n  };\n\n  componentDidMount() {\n    this.props.getTickets();\n  }\n\n  render() {\n    const {\n      classes,\n      hall,\n      hallsErr,\n      tickets,\n      ticketsErr,\n      hallsLoading,\n      ticketsLoading,\n    } = this.props;\n\n    if (hallsLoading || ticketsLoading) {\n      return (\n        <Page>\n          <Spinner />\n        </Page>\n      )\n    }\n\n    if (hallsErr || ticketsErr) {\n      const err = hallsErr || ticketsErr;\n      return (\n        <Page>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby=\"simple-dialog-title\" >\n            <DialogTitle id=\"simple-dialog-title\">{err}</DialogTitle>\n          </Dialog>\n        </Page>\n      )\n    }\n\n    if (!hall) {\n      return <Redirect exact to='/' />\n    }\n\n    return (\n      <Page>\n        {hall && <Paper className={classes.root} elevation={1}>\n          <Typography variant=\"title\" component=\"h3\">\n            {hall.title}\n          </Typography>\n\n          <Avatar\n            alt={hall.title}\n            src={hall.imageURL}\n            className={classes.bigAvatar}\n          />\n\n          <Typography variant='subtitle1'>\n            {hall.description}\n          </Typography>\n\n          <RoomScedule tickets={tickets} hallId={hall._id} />\n        </Paper>}\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const hallId = ownProps.match.params.hall_id;\n\n  return {\n    hallsErr: state.halls.err,\n    tickets: state.tickets.tickets,\n    ticketsErr: state.tickets.err,\n    hallsLoading: state.halls.isLoading,\n    ticketsLoading: state.tickets.isLoading,\n    hall: state.halls.halls.find(hall => hall._id === hallId),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTickets: () => dispatch(getTickets()),\n    confirmErr: () => dispatch(confirmErr())\n  };\n};\n\nHall.propTypes = {\n  hall: PropTypes.object,\n  hallsErr: PropTypes.string,\n  ticketsErr: PropTypes.string,\n  hallsLoading: PropTypes.bool.isRequired,\n  ticketsLoading: PropTypes.bool.isRequired,\n\n  getTickets: PropTypes.func.isRequired,\n  confirmErr: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Hall));\n\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport './App.scss';\nimport './styles/index.scss'\nimport Login from './pages/Login/Login';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport SignUp from './pages/SignUp/SignUp';\nimport Hall from './pages/Hall/Hall';\n\nfunction App() {\n  let routes = (\n    <Switch>\n      <Route exact path=\"/\" component={Dashboard} />\n      <Route path=\"/sign-up\" component={SignUp} />\n      <Route path=\"/sign-in\" component={Login} />\n      <Route path=\"/hall/:hall_id\" component={Hall} />\n    </Switch>\n  )\n  return (\n    <div>\n      {routes}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  email: null,\n  token: null,\n  userId: null,\n  err: null,\n  loading: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case actionTypes.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        email: action.email,\n        userId: action.userId,\n        loading: false\n      };\n\n    case actionTypes.SIGNIN_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n        email: action.email,\n        loading: false\n      };\n\n    case actionTypes.AUTH_FAIL:\n      return {\n        ...state,\n        err: action.err,\n        loading: false\n      };\n\n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        token: null,\n        userId: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import * as actionTypes from \"../actions/actionTypes\";\n\nexport const initialState = {\n  halls: [],\n  err: null,\n  isLoading: false\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case actionTypes.LOAD_HALLS_INIT:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case actionTypes.LOAD_HALLS_SUCCES:\n      return {\n        ...state,\n        halls: action.halls,\n        isLoading: false\n      };\n\n    case actionTypes.LOAD_HALLS_FAIL:\n      return {\n        ...state,\n        err: action.err,\n        isLoading: false\n      };\n\n    case actionTypes.ERR_CONFIRM:\n      return {\n        ...state,\n        err: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n    tickets: [],\n    err: null,\n    isLoading: false,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case actionTypes.GET_TICKETS_INIT:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case actionTypes.GET_TICKETS_SUCCESS:\n            return {\n                ...state,\n                tickets: action.tickets,\n                isLoading: false\n            };\n\n        case actionTypes.GET_TICKETS_FAIL:\n            return {\n                ...state,\n                err: action.err,\n                isLoading: false\n            };\n\n        case actionTypes.ERR_CONFIRM:\n            return {\n                ...state,\n                err: null\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\n// import { browserHistory } from \"react-router\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport authReducer from \"./redux/reducers/auth\";\nimport roomReducer from \"./redux/reducers/halls\";\nimport ticketsReducer from \"./redux/reducers/tickets\";\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  halls: roomReducer,\n  tickets: ticketsReducer,\n});\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <HashRouter basename={process.env.PUBLIC_URL} >\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}